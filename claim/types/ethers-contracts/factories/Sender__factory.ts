/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Sender, SenderInterface } from "../Sender";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_messageService",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "greet",
    inputs: [
      {
        name: "l1Receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "messageToL",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "messageService",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IMessageService",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50604051610363380380610363833981016040819052602c916050565b600080546001600160a01b0319166001600160a01b0392909216919091179055607e565b600060208284031215606157600080fd5b81516001600160a01b0381168114607757600080fd5b9392505050565b6102d68061008d6000396000f3fe6080604052600436106100295760003560e01c806309da52a21461002e5780638dae45dd14610043575b600080fd5b61004161003c366004610140565b61007f565b005b34801561004f57600080fd5b50600054610063906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600080546040516001600160a01b0390911691639f3ce55a918591906100a9908690602401610256565b60408051601f198184030181529181526020820180516001600160e01b031663738bdd5f60e11b1790525160e085901b6001600160e01b03191681526100f493929190600401610270565b600060405180830381600087803b15801561010e57600080fd5b505af1158015610122573d6000803e3d6000fd5b505050505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561015357600080fd5b82356001600160a01b038116811461016a57600080fd5b9150602083013567ffffffffffffffff8082111561018757600080fd5b818501915085601f83011261019b57600080fd5b8135818111156101ad576101ad61012a565b604051601f8201601f19908116603f011681019083821181831017156101d5576101d561012a565b816040528281528860208487010111156101ee57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000815180845260005b818110156102365760208185018101518683018201520161021a565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006102696020830184610210565b9392505050565b60018060a01b03841681528260208201526060604082015260006102976060830184610210565b9594505050505056fea26469706673582212207c6721ed7b6a820592b9c0b5c4532c9c484338ea514346b0adc5f822e710a16364736f6c63430008190033";

type SenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sender__factory extends ContractFactory {
  constructor(...args: SenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _messageService: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_messageService, overrides || {});
  }
  override deploy(
    _messageService: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_messageService, overrides || {}) as Promise<
      Sender & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Sender__factory {
    return super.connect(runner) as Sender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SenderInterface {
    return new Interface(_abi) as SenderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Sender {
    return new Contract(address, _abi, runner) as unknown as Sender;
  }
}
